<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="shopping.mapper.ItemMapper">
<resultMap id="ItemVOResultMap" type="shopping.model.ItemVO">
    <id property="itemId" column="item_id"/>
    <result property="userId" column="user_id"/>
    <result property="categoryId" column="category_id"/>
    <result property="stockQuantity" column="stock_quantity"/>
    <result property="itemDescription" column="item_description"/>
    <result property="itemPrice" column="item_price"/>
    <result property="itemName" column="item_name"/>
    <result property="uploadedDate" column="uploaded_date"/>
</resultMap>
<resultMap id="ImageVOResultMap" type="shopping.model.ImageVO">
    <id property="imageId" column="image_id"/>
    <result property="originalImageName" column="original_image_name"/>
    <result property="itemId" column="item_id"/>
    <result property="imagePath" column="image_path"/>
    <result property="uploadedDate" column="uploaded_date"/>
</resultMap>
<resultMap id="ItemResponseResultMap" type="shopping.response.ItemResponse">
    <association property="itemVO" resultMap="ItemVOResultMap"/>
    <collection property="images" ofType="shopping.model.ImageVO" resultMap="ImageVOResultMap"/>
</resultMap>

<insert id="itemSave" parameterType="shopping.model.ItemVO" useGeneratedKeys="true" keyProperty="itemId">
    INSERT INTO 
    shopping.item (user_id, category_id, stock_quantity, item_description, item_price, item_name)
    VALUES 
    (#{userId}, #{categoryId}, #{stockQuantity}, #{itemDescription}, #{itemPrice}, #{itemName})
</insert>
<select id="getItem" resultMap="ItemResponseResultMap" parameterType="int">
    SELECT
        i.item_id,
        i.user_id,
        i.category_id,
        i.stock_quantity,
        i.item_description,
        i.item_price,
        i.item_name,
        i.uploaded_date,
        im.image_id,
        im.original_image_name,
        im.image_path,
        im.uploaded_date 
    FROM
        shopping.item i
    LEFT JOIN
        shopping.item_images im ON i.item_id = im.item_id
    WHERE i.item_id=#{itmeId}
</select>
<select id="getItemList" resultMap="ItemResponseResultMap">
    SELECT
        i.item_id,
        i.user_id,
        i.category_id,
        i.stock_quantity,
        i.item_description,
        i.item_price,
        i.item_name,
        i.uploaded_date,
        im.image_id,
        im.original_image_name,
        im.image_path,
        im.uploaded_date 
    FROM
        shopping.item i
    LEFT JOIN
        shopping.item_images im ON i.item_id = im.item_id
</select>

<select id="getItemCategoryList" resultMap="ItemResponseResultMap">
    SELECT
        i.item_id,
        i.user_id,
        i.category_id,
        i.stock_quantity,
        i.item_description,
        i.item_price,
        i.item_name,
        i.uploaded_date,
        im.image_id,
        im.original_image_name,
        im.image_path,
        im.uploaded_date 
    FROM
        shopping.item i 
    LEFT JOIN
        shopping.item_images im ON i.category_id = #{categoryId}
</select>
<delete id="removeItem" parameterType="int">
	DELETE 
	FROM shopping.item i
	WHERE i.item_id=#{itemId}
</delete>
<update id="updateItem" parameterType="shopping.model.ItemVO">
UPDATE shopping.item 
SET
    item_description = #{itemDescription},
    item_price = #{itemPrice},
    item_name = #{itemName}
WHERE item_id = #{itemId}; <!--수정 날짜도 추가하는 방식으로  -->

</update>

</mapper> 
